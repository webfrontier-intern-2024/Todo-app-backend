"""Initial migration

Revision ID: a3991c028479
Revises: 
Create Date: 2024-10-29 16:42:11.106232

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a3991c028479'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tags', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='comment',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('tags', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=True)
    op.alter_column('todo_tags', 'todo_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='comment',
               existing_nullable=False)
    op.drop_constraint('todo_tags_tag_id_fkey', 'todo_tags', type_='foreignkey')
    op.drop_constraint('todo_tags_todo_id_fkey', 'todo_tags', type_='foreignkey')
    op.create_foreign_key(None, 'todo_tags', 'tags', ['tag_id'], ['id'])
    op.create_foreign_key(None, 'todo_tags', 'todos', ['todo_id'], ['id'])
    op.alter_column('todos', 'title',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('todos', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('todos', 'datetime',
               existing_type=sa.DATE(),
               nullable=False,
               comment=None,
               existing_comment='comment')
    op.create_index(op.f('ix_todos_id'), 'todos', ['id'], unique=False)
    op.create_index(op.f('ix_todos_title'), 'todos', ['title'], unique=False)
    op.drop_column('todos', 'completed')
    op.drop_column('todos', 'tags')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('todos', sa.Column('tags', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='comment'))
    op.add_column('todos', sa.Column('completed', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True, comment='comment'))
    op.drop_index(op.f('ix_todos_title'), table_name='todos')
    op.drop_index(op.f('ix_todos_id'), table_name='todos')
    op.alter_column('todos', 'datetime',
               existing_type=sa.DATE(),
               nullable=True,
               comment='comment')
    op.alter_column('todos', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('todos', 'title',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_constraint(None, 'todo_tags', type_='foreignkey')
    op.drop_constraint(None, 'todo_tags', type_='foreignkey')
    op.create_foreign_key('todo_tags_todo_id_fkey', 'todo_tags', 'todos', ['todo_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('todo_tags_tag_id_fkey', 'todo_tags', 'tags', ['tag_id'], ['id'], ondelete='CASCADE')
    op.alter_column('todo_tags', 'todo_id',
               existing_type=sa.INTEGER(),
               comment='comment',
               existing_nullable=False)
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.alter_column('tags', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('tags', 'id',
               existing_type=sa.INTEGER(),
               comment='comment',
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###
